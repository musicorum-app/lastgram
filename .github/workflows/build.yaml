name: Build and deploy

on:
  push: 
    branches:
      - main
  workflow_dispatch:

env:
  SERVICE_NAME: lastgrambot_bot
  TIMEOUT: 10000

jobs:
  build:
    name: "Build image"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get package version
        id: version
        uses: martinbeentjes/npm-get-version-action@main

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            "ghcr.io/${{ github.repository }}:latest"
            "ghcr.io/${{ github.repository }}:${{ steps.version.outputs.current-version}}-${{ github.run_id }}"
          labels: "version=${{ steps.version.outputs.current-version}}-${{ github.run_id }}"
  
  deploy-stage:
    name: "Staging deploy"
    runs-on: ubuntu-latest
    needs: build
    environment: staging
    
    steps:
      - name: Deploy Stage
        uses: fjogeleit/http-request-action@v1
        env:
          WEBHOOK_URL: ${{ secrets.DEPLOY_WEBHOOK_URL }}
        with:
          url: ${{ secrets.SWARM_API }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          timeout: 15000
          data: '{"service": "${{env.SERVICE_NAME}}", "timeout": ${{env.TIMEOUT}}, "webhook": "${{env.WEBHOOK_URL}}"}'
  
  deploy-prod:
    name: "Production deploy"
    runs-on: ubuntu-latest
    needs: deploy-stage
    environment: production
    
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Promote build image to production
        run: |
          docker buildx imagetools create \
            --tag ghcr.io/${{ github.repository }}:production \
            ghcr.io/${{ github.repository }}:latest

      - name: TODO
        run: echo "not implemented yet!" && exit 1
